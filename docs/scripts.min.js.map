{"version":3,"sources":["card/card-generator.js","nav/nav.js","sidebar/sidebar.js"],"names":["data","events","type","title","source","time","description","icon","values","electricity","water","gas","size","temperature","humidity","albumcover","artist","track","name","length","volume","buttons","image","appendDiv","parent","div","document","createElement","appendChild","getIconThemeByEventType","iconName","eventType","isCritical","hasAttachedImage","event","createCard","ribbon","getElementById","card","classList","add","setSize","setType","setCardHeader","header","src","innerHTML","trimTitle","close","str","cardSize","allowedCharWidth","undefined","slice","setBasicInfo","basicInfo","appendCriticalDetails","details","appendDescription","appendPlayer","player","content","querySelector","clone","importNode","appendAttachedImage","container","appendButtons","buttonRow","forEach","buttonText","i","button","appendMeasurements","measurements","measurementData","push","measurement","markLastElementInCard","lastChild","contains","placeExpandButton","expand","expandableSibling","lastElementChild","previousElementSibling","generateCards","navItems","getElementsByClassName","navs","children","toggle","addEventListener","e","j","target","parentNode","remove"],"mappings":"aAAA,IAAAA,KAAA,CACAC,OAAA,CACA,CACAC,KAAA,OACAC,MAAA,0CACAC,OAAA,sBACAC,KAAA,iBACAC,YAAA,2FACAC,KAAA,QACAP,KAAA,CACAE,KAAA,QACAM,OAAA,CACA,CACAC,YAAA,CACA,CAAA,aAAA,KACA,CAAA,aAAA,KACA,CAAA,aAAA,OACA,CAAA,aAAA,KACA,CAAA,aAAA,KACA,CAAA,aAAA,KACA,CAAA,aAAA,OAGA,CACAC,MAAA,CACA,CAAA,aAAA,IACA,CAAA,aAAA,MACA,CAAA,aAAA,MACA,CAAA,aAAA,IACA,CAAA,aAAA,MACA,CAAA,aAAA,MACA,CAAA,aAAA,QAGA,CACAC,IAAA,CACA,CAAA,aAAA,IACA,CAAA,aAAA,MACA,CAAA,aAAA,MACA,CAAA,aAAA,MACA,CAAA,aAAA,IACA,CAAA,aAAA,MACA,CAAA,aAAA,UAKAC,KAAA,KAEA,CACAV,KAAA,OACAC,MAAA,gBACAC,OAAA,uBACAC,KAAA,iBACAC,YAAA,KACAC,KAAA,MACAK,KAAA,KAEA,CACAV,KAAA,OACAC,MAAA,mBACAC,OAAA,UACAC,KAAA,iBACAC,YAAA,KACAC,KAAA,gBACAK,KAAA,KAEA,CACAV,KAAA,OACAC,MAAA,qBACAC,OAAA,SACAC,KAAA,iBACAC,YAAA,KACAC,KAAA,SACAK,KAAA,KAEA,CACAV,KAAA,OACAC,MAAA,8BACAC,OAAA,sBACAC,KAAA,iBACAC,YAAA,yCACAC,KAAA,UACAK,KAAA,IACAZ,KAAA,CACAa,YAAA,GACAC,SAAA,KAGA,CACAZ,KAAA,WACAC,MAAA,kCACAC,OAAA,cACAC,KAAA,iBACAC,YAAA,2DACAC,KAAA,KACAK,KAAA,KAEA,CACAV,KAAA,OACAC,MAAA,kBACAC,OAAA,iBACAC,KAAA,iBACAC,YAAA,wBACAC,KAAA,QACAK,KAAA,IACAZ,KAAA,CACAe,WAAA,sFACAC,OAAA,yBACAC,MAAA,CACAC,KAAA,UACAC,OAAA,QAEAC,OAAA,KAGA,CACAlB,KAAA,OACAC,MAAA,uBACAC,OAAA,cACAC,KAAA,iBACAC,YAAA,yFACAC,KAAA,SACAK,KAAA,IACAZ,KAAA,CACAqB,QAAA,CAAA,KAAA,SAGA,CACAnB,KAAA,OACAC,MAAA,oBACAC,OAAA,iBACAC,KAAA,iBACAC,YAAA,kDACAC,KAAA,UACAK,KAAA,KAEA,CACAV,KAAA,WACAC,MAAA,kBACAC,OAAA,kBACAC,KAAA,iBACAC,YAAA,yGACAC,KAAA,MACAP,KAAA,CACAsB,MAAA,4BAEAV,KAAA,KAEA,CACAV,KAAA,OACAC,MAAA,gBACAC,OAAA,SACAC,KAAA,iBACAC,YAAA,KACAC,KAAA,SACAK,KAAA,OAKAW,UAAA,SAAAC,GACA,IAAAC,EAAAC,SAAAC,cAAA,OAEA,OADAH,EAAAI,YAAAH,GACAA,GAGAI,wBAAA,SAAAC,EAAAC,GACA,OAAAC,WAAAD,GACAD,EAAA,SADAA,GAIAE,WAAA,SAAA9B,GACA,MAAA,aAAAA,GAGA+B,iBAAA,SAAAC,GACA,QAAAA,EAAAlC,SAAAkC,EAAAlC,KAAAsB,SAAAY,EAAAlC,KAAAE,MAAA,UAAAgC,EAAAlC,KAAAE,OAGAiC,WAAA,WACA,IAAAC,EAAAV,SAAAW,eAAA,UACAC,EAAAf,UAAAa,GAEA,OADAE,EAAAC,UAAAC,IAAA,QACAF,GAGAG,QAAA,SAAAP,EAAAI,GACAA,EAAAC,UAAAC,IAAA,QAAAN,EAAAtB,OAGA8B,QAAA,SAAAR,EAAAI,GACAN,WAAAE,EAAAhC,OACAoC,EAAAC,UAAAC,IAAA,iBAEAP,iBAAAC,IACAI,EAAAC,UAAAC,IAAA,oBAIAG,cAAA,SAAAT,EAAAI,GACA,IAAAM,EAAArB,UAAAe,GACAM,EAAAL,UAAAC,IAAA,aAEA,IAAAjC,EAAAmB,SAAAC,cAAA,OACApB,EAAAgC,UAAAC,IAAA,cAAA,oBACA,IAAAV,EAAAD,wBAAAK,EAAA3B,KAAA2B,EAAAhC,MACAK,EAAAsC,IAAA,YAAAf,EAAA,OACAc,EAAAhB,YAAArB,GAEA,IAAAJ,EAAAoB,UAAAqB,GACAzC,EAAA2C,UAAAC,UAAAb,EAAA/B,MAAA+B,EAAAtB,MACAT,EAAAoC,UAAAC,IAAA,eAEA,IAAAQ,EAAAtB,SAAAC,cAAA,OACAqB,EAAAT,UAAAC,IAAA,eACAV,EAAAD,wBAAA,QAAAK,EAAAhC,MACA8C,EAAAH,IAAA,YAAAf,EAAA,OACAc,EAAAhB,YAAAoB,IAGAD,UAAA,SAAAE,EAAAC,GAEA,IAAAC,OAAAC,EACA,OAAAF,GACA,IAAA,IACA,IAAA,IACAC,EAAA,GACA,MACA,IAAA,IACAA,EAAA,GAGA,OAAAF,EAAA9B,OAAAgC,EAAAF,EAEAA,EAAAI,MAAA,EAAAF,GAAA,OAGAG,aAAA,SAAApB,EAAAI,GACA,IAAAiB,EAAAhC,UAAAe,GACAiB,EAAAhB,UAAAC,IAAA,oBACA,MAAAN,EAAAtB,MACA2C,EAAAhB,UAAAC,IAAA,sBAEAR,WAAAE,EAAAhC,OACAqD,EAAAhB,UAAAC,IAAA,uCAGAjB,UAAAgC,GACAT,UAAAZ,EAAA9B,OAEAmB,UAAAgC,GACAT,UAAAZ,EAAA7B,MAGAmD,sBAAA,SAAAlB,GACA,IAAAmB,EAAAlC,UAAAe,GAEA,OADAmB,EAAAlB,UAAAC,IAAA,iBACAiB,GAGAC,kBAAA,SAAAxB,EAAAI,GACA,GAAAJ,EAAA5B,YAAA,CAEA,IAAAA,EAAAiB,UAAAe,GACA,MAAAJ,EAAAtB,MACAN,EAAAiC,UAAAC,IAAA,uBAEAR,WAAAE,EAAAhC,OACAI,EAAAiC,UAAAC,IAAA,qBAEAlC,EAAAwC,UAAAZ,EAAA5B,cAGAqD,aAAA,SAAAzB,EAAAI,GACA,GAAA,WAAAJ,EAAA3B,MAAA2B,EAAAlC,MAAAkC,EAAAlC,KAAAiB,MAAA,CAEA,IAAA2C,EAAAlC,SAAAW,eAAA,UACAuB,EAAAC,QAAAC,cAAA,iBAAAjB,IAAAX,EAAAlC,KAAAe,WACA6C,EAAAC,QAAAC,cAAA,iBAAAhB,UAAAZ,EAAAlC,KAAAgB,OAAA,MAAAkB,EAAAlC,KAAAiB,MAAAC,KACA0C,EAAAC,QAAAC,cAAA,uBAAAhB,UAAAZ,EAAAlC,KAAAiB,MAAAE,OACAyC,EAAAC,QAAAC,cAAA,yBAAAhB,UAAAZ,EAAAlC,KAAAoB,OAAA,IACA,IAAA2C,EAAArC,SAAAsC,WAAAJ,EAAAC,SAAA,GACAvB,EAAAV,YAAAmC,KAGAE,oBAAA,SAAA/B,EAAAI,GACA,GAAAL,iBAAAC,GAAA,CAEA,IAAAgC,EAAA3C,UAAAe,GACA4B,EAAA3B,UAAAC,IAAA,yBAEA,IAAAlB,EAAAI,SAAAC,cAAA,OACAL,EAAAiB,UAAAC,IAAA,cAAA,2BACA,UAAAN,EAAAlC,KAAAE,KACAoB,EAAAuB,IAAA,wBAEAvB,EAAAuB,IAAA,sBAEAqB,EAAAtC,YAAAN,KAGA6C,cAAA,SAAAjC,EAAAI,GACA,GAAAJ,EAAAlC,MAAAkC,EAAAlC,KAAAqB,QAAA,CAEA,IAAA+C,EAAA7C,UAAAe,GACA8B,EAAA7B,UAAAC,IAAA,aAEAN,EAAAlC,KAAAqB,QAAAgD,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAjD,UAAA6C,GACAI,EAAAjC,UAAAC,IAAA,gBACA,IAAA+B,GACAC,EAAAjC,UAAAC,IAAA,uBAEAgC,EAAA1B,UAAAwB,MAIAG,mBAAA,SAAAvC,EAAAI,GACA,GAAAJ,EAAAlC,MAAAkC,EAAAlC,KAAAa,aAAAqB,EAAAlC,KAAAc,SAAA,CAEA,IAAA4D,EAAAnD,UAAAe,GACAoC,EAAAnC,UAAAC,IAAA,sBAEA,IAAAmC,EAAA,GACAzC,EAAAlC,KAAAa,aACA8D,EAAAC,KAAA,CAAA,cAAA,qBAAA,OAEA1C,EAAAlC,KAAAc,UACA6D,EAAAC,KAAA,CAAA,WAAA,mBAAA,MAGAD,EAAAN,QAAA,SAAArE,GACA,IAAA6E,EAAAnD,SAAAW,eAAA,eACAwC,EAAAhB,QAAAC,cAAA,sBAAAhB,UAAA9C,EAAA,GACA6E,EAAAhB,QAAAC,cAAA,uBAAAhB,UAAAZ,EAAAlC,KAAAA,EAAA,IAAAA,EAAA,GACA,IAAA+D,EAAArC,SAAAsC,WAAAa,EAAAhB,SAAA,GACAa,EAAA9C,YAAAmC,OAIAe,sBAAA,SAAAC,GACA,IAAAA,EAAAxC,UAAApB,QAAA4D,EAAAxC,UAAAyC,SAAA,uBACAD,EAAAxC,UAAAC,IAAA,uBAGAyC,kBAAA,SAAA3C,GACA,IAAA4C,EAAAxD,SAAAC,cAAA,OACAuD,EAAA3C,UAAAC,IAAA,gBACA0C,EAAArC,IAAA,oBAEA,IAAAsC,OAAA/B,EACAd,EAAA8C,iBAAA7C,UAAAyC,SAAA,qBACAE,EAAA3C,UAAAC,IAAA,yBACA2C,EAAA7C,GACAA,EAAA8C,iBAAA7C,UAAAyC,SAAA,WACA1C,EAAA8C,iBAAA7C,UAAAyC,SAAA,0BACA1C,EAAA8C,iBAAA7C,UAAAyC,SAAA,uBACAG,EAAA7C,EAAA8C,iBAAAC,wBACA9C,UAAAC,IAAA,uBAEA2C,EAAA7C,EAAA8C,kBACA7C,UAAAC,IAAA,sBAGA2C,EAAAvD,YAAAsD,IAGAI,cAAA,WACAtF,KAAAC,OAAAoE,QAAA,SAAAnC,GACA,IAAAI,EAAAH,aACAM,QAAAP,EAAAI,GACAI,QAAAR,EAAAI,GACAK,cAAAT,EAAAI,GACAgB,aAAApB,EAAAI,GAEAN,WAAAE,EAAAhC,QACAoC,EAAAkB,sBAAAlB,IAGAoB,kBAAAxB,EAAAI,GACAqB,aAAAzB,EAAAI,GACA2B,oBAAA/B,EAAAI,GACA6B,cAAAjC,EAAAI,GACAmC,mBAAAvC,EAAAI,GAEA2C,kBAAA3C,GACAwC,sBAAAxC,EAAA8C,qBAIAE,gBCpYA,IAHA,IAAAC,SAAA7D,SAAA8D,uBAAA,aACAC,KAAA/D,SAAA8D,uBAAA,OAEAjB,EAAA,EAAAA,EAAAkB,KAAAtE,OAAAoD,IACAkB,KAAAlB,GAAAmB,SAAA,GAAAnD,UAAAoD,OAAA,oBAGA,IAAA,IAAApB,GAAA,EAAAA,GAAAgB,SAAApE,OAAAoD,KACAgB,SAAAhB,IAAAqB,iBAAA,QAAA,SAAAC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAC,WAAAN,SAAAvE,OAAA2E,IACAD,EAAAE,OAAAC,WAAAN,SAAAI,GAAAvD,UAAA0D,OAAA,oBAEAJ,EAAAE,OAAAxD,UAAAoD,OAAA,sBCZAjE,SAAAW,eAAA,kBAAAuD,iBAAA,QAAA,WACAlE,SAAAW,eAAA,WAAAE,UAAAoD,OAAA","file":"scripts.min.js","sourcesContent":["const data = {\r\n    \"events\": [\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Еженедельный отчет по расходам ресурсов\",\r\n            \"source\": \"Сенсоры потребления\",\r\n            \"time\": \"19:00, Сегодня\",\r\n            \"description\": \"Так держать! За последнюю неделю вы потратили на 10% меньше ресурсов, чем неделей ранее.\",\r\n            \"icon\": \"stats\",\r\n            \"data\": {\r\n                \"type\": \"graph\",\r\n                \"values\": [\r\n                    {\r\n                        \"electricity\": [\r\n                            [\"1536883200\", 115],\r\n                            [\"1536969600\", 117],\r\n                            [\"1537056000\", 117.2],\r\n                            [\"1537142400\", 118],\r\n                            [\"1537228800\", 120],\r\n                            [\"1537315200\", 123],\r\n                            [\"1537401600\", 129]\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"water\": [\r\n                            [\"1536883200\", 40],\r\n                            [\"1536969600\", 40.2],\r\n                            [\"1537056000\", 40.5],\r\n                            [\"1537142400\", 41],\r\n                            [\"1537228800\", 41.4],\r\n                            [\"1537315200\", 41.9],\r\n                            [\"1537401600\", 42.6]\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"gas\": [\r\n                            [\"1536883200\", 13],\r\n                            [\"1536969600\", 13.2],\r\n                            [\"1537056000\", 13.5],\r\n                            [\"1537142400\", 13.7],\r\n                            [\"1537228800\", 14],\r\n                            [\"1537315200\", 14.2],\r\n                            [\"1537401600\", 14.5]\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"size\": \"l\"\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Дверь открыта\",\r\n            \"source\": \"Сенсор входной двери\",\r\n            \"time\": \"18:50, Сегодня\",\r\n            \"description\": null,\r\n            \"icon\": \"key\",\r\n            \"size\": \"s\"\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Уборка закончена\",\r\n            \"source\": \"Пылесос\",\r\n            \"time\": \"18:45, Сегодня\",\r\n            \"description\": null,\r\n            \"icon\": \"robot-cleaner\",\r\n            \"size\": \"s\"\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Новый пользователь\",\r\n            \"source\": \"Роутер\",\r\n            \"time\": \"18:45, Сегодня\",\r\n            \"description\": null,\r\n            \"icon\": \"router\",\r\n            \"size\": \"s\"\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Изменен климатический режим\",\r\n            \"source\": \"Сенсор микроклимата\",\r\n            \"time\": \"18:30, Сегодня\",\r\n            \"description\": \"Установлен климатический режим «Фиджи»\",\r\n            \"icon\": \"thermal\",\r\n            \"size\": \"m\",\r\n            \"data\": {\r\n                \"temperature\": 24,\r\n                \"humidity\": 80\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"critical\",\r\n            \"title\": \"Невозможно включить кондиционер\",\r\n            \"source\": \"Кондиционер\",\r\n            \"time\": \"18:21, Сегодня\",\r\n            \"description\": \"В комнате открыто окно, закройте его и повторите попытку\",\r\n            \"icon\": \"ac\",\r\n            \"size\": \"m\"\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Музыка включена\",\r\n            \"source\": \"Яндекс.Станция\",\r\n            \"time\": \"18:16, Сегодня\",\r\n            \"description\": \"Сейчас проигрывается:\",\r\n            \"icon\": \"music\",\r\n            \"size\": \"m\",\r\n            \"data\": {\r\n                \"albumcover\": \"https://avatars.yandex.net/get-music-content/193823/1820a43e.a.5517056-1/m1000x1000\",\r\n                \"artist\": \"Florence & The Machine\",\r\n                \"track\": {\r\n                    \"name\": \"Big God\",\r\n                    \"length\": \"4:31\"\r\n                },\r\n                \"volume\": 80\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Заканчивается молоко\",\r\n            \"source\": \"Холодильник\",\r\n            \"time\": \"17:23, Сегодня\",\r\n            \"description\": \"Кажется, в холодильнике заканчивается молоко. Вы хотите добавить его в список покупок?\",\r\n            \"icon\": \"fridge\",\r\n            \"size\": \"m\",\r\n            \"data\": {\r\n                \"buttons\": [\"Да\", \"Нет\"]\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Зарядка завершена\",\r\n            \"source\": \"Оконный сенсор\",\r\n            \"time\": \"16:22, Сегодня\",\r\n            \"description\": \"Ура! Устройство «Оконный сенсор» снова в строю!\",\r\n            \"icon\": \"battery\",\r\n            \"size\": \"s\"\r\n        },\r\n        {\r\n            \"type\": \"critical\",\r\n            \"title\": \"Пылесос застрял\",\r\n            \"source\": \"Сенсор движения\",\r\n            \"time\": \"16:17, Сегодня\",\r\n            \"description\": \"Робопылесос не смог сменить свое местоположение в течение последних 3 минут. Похоже, ему нужна помощь.\",\r\n            \"icon\": \"cam\",\r\n            \"data\": {\r\n                \"image\": \"get_it_from_mocks_:3.jpg\"\r\n            },\r\n            \"size\": \"l\"\r\n        },\r\n        {\r\n            \"type\": \"info\",\r\n            \"title\": \"Вода вскипела\",\r\n            \"source\": \"Чайник\",\r\n            \"time\": \"16:20, Сегодня\",\r\n            \"description\": null,\r\n            \"icon\": \"kettle\",\r\n            \"size\": \"s\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst appendDiv = (parent) => {\r\n    const div = document.createElement(\"div\");\r\n    parent.appendChild(div);\r\n    return div;\r\n}\r\n\r\nconst getIconThemeByEventType = (iconName, eventType) => {\r\n    if (!isCritical(eventType)) return iconName;\r\n    return `${iconName}-white`;\r\n}\r\n\r\nconst isCritical = (type) => {\r\n    return type === 'critical';\r\n}\r\n\r\nconst hasAttachedImage = (event) => {\r\n    return !!event.data && (!!event.data.image || (!!event.data.type && event.data.type === 'graph'));\r\n}\r\n\r\nconst createCard = () => {\r\n    const ribbon = document.getElementById(\"ribbon\");\r\n    const card = appendDiv(ribbon);\r\n    card.classList.add(\"card\");\r\n    return card;\r\n}\r\n\r\nconst setSize = (event, card) => {\r\n    card.classList.add(`card_${event.size}`);\r\n}\r\n\r\nconst setType = (event, card) => {\r\n    if (isCritical(event.type)) {\r\n        card.classList.add('card_critical');\r\n    }\r\n    if (hasAttachedImage(event)) {\r\n        card.classList.add('card_with-image');\r\n    }\r\n}\r\n\r\nconst setCardHeader = (event, card) => {\r\n    const header = appendDiv(card);\r\n    header.classList.add(\"card__row\");\r\n\r\n    const icon = document.createElement(\"img\");\r\n    icon.classList.add(\"card__image\", \"card__image_icon\");\r\n    let iconName = getIconThemeByEventType(event.icon, event.type);\r\n    icon.src = `./images/${iconName}.svg`;\r\n    header.appendChild(icon);\r\n\r\n    const title = appendDiv(header);\r\n    title.innerHTML = trimTitle(event.title, event.size);\r\n    title.classList.add(\"card__title\");\r\n    \r\n    const close = document.createElement(\"img\");\r\n    close.classList.add(\"card__close\");\r\n    iconName = getIconThemeByEventType('cross', event.type);\r\n    close.src = `./images/${iconName}.svg`;\r\n    header.appendChild(close);\r\n}\r\n\r\nconst trimTitle = (str, cardSize) => {\r\n    // The ugly way\r\n    let allowedCharWidth = undefined;\r\n    switch (cardSize) {\r\n        case 'l':\r\n        case 'm':\r\n            allowedCharWidth = 50;\r\n            break;\r\n        case 's':\r\n            allowedCharWidth = 20;\r\n            break;\r\n    };\r\n    if (str.length < allowedCharWidth) return str;\r\n\r\n    return str.slice(0, allowedCharWidth) + '...';\r\n}\r\n\r\nconst setBasicInfo = (event, card) => {\r\n    const basicInfo = appendDiv(card);\r\n    basicInfo.classList.add(\"card__basic-info\");\r\n    if (event.size === 's') {\r\n        basicInfo.classList.add(\"card__basic-info_s\");\r\n    }\r\n    if (isCritical(event.type)) {\r\n        basicInfo.classList.add(\"card__basic-info_with-bottom-margin\");\r\n    }\r\n\r\n    const device = appendDiv(basicInfo);\r\n    device.innerHTML = event.source;\r\n\r\n    const time = appendDiv(basicInfo);\r\n    time.innerHTML = event.time;\r\n}\r\n\r\nconst appendCriticalDetails = (card) => {\r\n    const details = appendDiv(card);\r\n    details.classList.add(\"card__details\");\r\n    return details;\r\n}\r\n\r\nconst appendDescription = (event, card) => {\r\n    if (!event.description) return;\r\n\r\n    const description = appendDiv(card);\r\n    if (event.size === 'l') {\r\n        description.classList.add(\"card__description_l\");\r\n    }\r\n    if (!isCritical(event.type)) {\r\n        description.classList.add(\"card__description\");\r\n    }\r\n    description.innerHTML = event.description;\r\n}\r\n\r\nconst appendPlayer = (event, card) => {\r\n    if (!event.icon === 'music' || !event.data || !event.data.track) return;\r\n\r\n    const player = document.getElementById('player');\r\n    player.content.querySelector('.player__logo').src = event.data.albumcover;\r\n    player.content.querySelector('.player__name').innerHTML = `${event.data.artist} - ${event.data.track.name}`;\r\n    player.content.querySelector('.player__value_time').innerHTML = event.data.track.length;\r\n    player.content.querySelector('.player__value_volume').innerHTML = `${event.data.volume}%`;\r\n    const clone = document.importNode(player.content, true);\r\n    card.appendChild(clone);\r\n}\r\n\r\nconst appendAttachedImage = (event, card) => {\r\n    if (!hasAttachedImage(event)) return;\r\n\r\n    const container = appendDiv(card);\r\n    container.classList.add(\"card__image-container\");\r\n\r\n    const image = document.createElement(\"img\");\r\n    image.classList.add(\"card__image\", \"card__image_attachement\");\r\n    if (event.data.type === 'graph') {\r\n        image.src = './images/Richdata.png';\r\n    } else {\r\n        image.src = './images/bitmap.png';\r\n    }\r\n    container.appendChild(image);\r\n}\r\n\r\nconst appendButtons = (event, card) => {\r\n    if (!event.data || !event.data.buttons) return;\r\n\r\n    const buttonRow = appendDiv(card);\r\n    buttonRow.classList.add(\"card__row\");\r\n\r\n    event.data.buttons.forEach((buttonText, i) => {\r\n        const button = appendDiv(buttonRow);\r\n        button.classList.add(\"card__button\");\r\n        if (i === 0) {\r\n            button.classList.add(\"card__button_accent\");\r\n        }\r\n        button.innerHTML = buttonText;\r\n    });\r\n}\r\n\r\nconst appendMeasurements = (event, card) => {\r\n    if (!event.data || !event.data.temperature || !event.data.humidity) return;\r\n\r\n    const measurements = appendDiv(card);\r\n    measurements.classList.add(\"card__measurements\");\r\n\r\n    let measurementData = [];\r\n    if (!!event.data.temperature) {\r\n        measurementData.push(['temperature', 'Температура:&nbsp;', ' C']);\r\n    }\r\n    if (!!event.data.humidity) {\r\n        measurementData.push(['humidity', 'Влажность:&nbsp;', '%']);\r\n    }\r\n\r\n    measurementData.forEach((data) => {\r\n        const measurement = document.getElementById('measurement');\r\n        measurement.content.querySelector('.measurement__text').innerHTML = data[1];\r\n        measurement.content.querySelector('.measurement__value').innerHTML = event.data[data[0]] + data[2];\r\n        const clone = document.importNode(measurement.content, true);\r\n        measurements.appendChild(clone);\r\n    });\r\n}\r\n\r\nconst markLastElementInCard = (lastChild) => {\r\n    if (lastChild.classList.length === 1 && lastChild.classList.contains('card__expander-row')) return;\r\n    lastChild.classList.add(\"card__last-element\");\r\n}\r\n\r\nconst placeExpandButton = (card) => {\r\n    const expand = document.createElement(\"img\");\r\n    expand.classList.add(\"card__expand\");\r\n    expand.src = `./images/next.svg`;\r\n    \r\n    let expandableSibling = undefined;\r\n    if (card.lastElementChild.classList.contains('card__basic-info')) {\r\n        expand.classList.add(\"card__expand_absolute\");\r\n        expandableSibling = card;\r\n    } else if (card.lastElementChild.classList.contains('player') \r\n    || card.lastElementChild.classList.contains('card__image-container')\r\n    || card.lastElementChild.classList.contains('card__measurements')) {\r\n        expandableSibling = card.lastElementChild.previousElementSibling;\r\n        expandableSibling.classList.add(\"card__expander-row\");\r\n    } else {\r\n        expandableSibling = card.lastElementChild;\r\n        expandableSibling.classList.add(\"card__expander-row\");\r\n    }\r\n\r\n    expandableSibling.appendChild(expand);\r\n}\r\n\r\nconst generateCards = () => {\r\n    data.events.forEach((event) => {\r\n        let card = createCard();\r\n        setSize(event, card);\r\n        setType(event, card);\r\n        setCardHeader(event, card);\r\n        setBasicInfo(event, card);\r\n\r\n        if (isCritical(event.type)) {\r\n            card = appendCriticalDetails(card);\r\n        }\r\n\r\n        appendDescription(event, card);\r\n        appendPlayer(event, card);\r\n        appendAttachedImage(event, card);\r\n        appendButtons(event, card);\r\n        appendMeasurements(event, card);\r\n\r\n        placeExpandButton(card);\r\n        markLastElementInCard(card.lastElementChild);\r\n    });\r\n}\r\n\r\ngenerateCards();\r\n","const navItems = document.getElementsByClassName('nav__item');\r\nconst navs = document.getElementsByClassName('nav');\r\n\r\nfor (let i = 0; i < navs.length; i++) {\r\n    navs[i].children[0].classList.toggle('nav__item_active');\r\n}\r\n\r\nfor (let i = 0; i < navItems.length; i++) {\r\n    navItems[i].addEventListener('click', (e) => {\r\n        for (let j = 0; j < e.target.parentNode.children.length; j++) {\r\n            e.target.parentNode.children[j].classList.remove('nav__item_active');\r\n        }\r\n        e.target.classList.toggle('nav__item_active');\r\n    })\r\n}","document.getElementById(\"toggle-sidebar\").addEventListener(\"click\", () => {\r\n    document.getElementById(\"sidebar\").classList.toggle(\"sidebar_opened\");\r\n})"]}